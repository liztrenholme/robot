{"version":3,"sources":["assets/arm.png","assets/leg.png","assets/body.png","assets/head.png","components/body/index.js","components/rightArm/index.js","components/leftArm/index.js","components/rightLeg/index.js","components/leftLeg/index.js","components/head/index.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Body","className","src","bodyImg","alt","Component","RightArm","dance","this","props","rightArmImg","LeftArm","leftArmImg","RightLeg","walkForward","walkBackward","rightLegImg","LeftLeg","leftLegImg","Head","headImg","Main","state","setState","onClick","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.368939ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arm.0c2bfaa2.png\";","module.exports = __webpack_public_path__ + \"static/media/leg.3a8a3d1b.png\";","module.exports = __webpack_public_path__ + \"static/media/body.aa4751ba.png\";","module.exports = __webpack_public_path__ + \"static/media/head.937d0fcd.png\";","import React, { Component } from 'react'\n// import PropTypes from 'prop-types'\nimport bodyImg from '../../assets/body.png'\nimport './body.css'\n\nclass Body extends Component {\n  render() {\n    return (\n      <div className=\"body\">\n        <img src={bodyImg} alt='body' />\n      </div>\n    )\n  }\n}\n\nBody.propTypes = {\n//   selectView: PropTypes.func,\n//   active: PropTypes.string\n}\n\nexport default Body","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport rightArmImg from '../../assets/arm.png'\nimport './rightArm.css'\n\nclass RightArm extends Component {\n  render() {\n    const { dance } = this.props\n    return (\n      <div className={dance ? 'rightArm, danceRightArm' : 'rightArm'}>\n        <img src={rightArmImg} alt='rightArm' />\n      </div>\n    )\n  }\n}\n\nRightArm.propTypes = {\n  dance: PropTypes.bool,\n//   active: PropTypes.string\n}\n\nexport default RightArm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport leftArmImg from '../../assets/arm.png'\nimport './leftArm.css'\n\nclass LeftArm extends Component {\n  render() {\n    const { dance } = this.props\n    return (\n      <div className={dance ? 'leftArm, danceLeftArm': 'leftArm'}>\n        <img src={leftArmImg} alt='leftArm' />\n      </div>\n    )\n  }\n}\n\nLeftArm.propTypes = {\n  dance: PropTypes.bool,\n//   active: PropTypes.string\n}\n\nexport default LeftArm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport rightLegImg from '../../assets/leg.png'\nimport './rightLeg.css'\n\nclass RightLeg extends Component {\n  render() {\n    const { dance, walkForward, walkBackward } = this.props\n    return (\n      <div className={dance ? 'rightLeg, danceRightLeg' : walkForward || walkBackward ? 'rightLeg, walkRightLeg' : 'rightLeg'}>\n        <img className='legImg' src={rightLegImg} alt='rightleg' />\n      </div>\n    )\n  }\n}\n\nRightLeg.propTypes = {\n  dance: PropTypes.bool,\n  walkForward: PropTypes.bool,\n  walkBackward: PropTypes.bool\n}\n\nexport default RightLeg","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport leftLegImg from '../../assets/leg.png'\nimport './leftLeg.css'\n\nclass LeftLeg extends Component {\n  render() {\n    const { walkForward, walkBackward } = this.props\n    return (\n      <div className={walkForward || walkBackward ? 'leftLeg, walkLeftLeg' : 'leftLeg'}>\n        <img className='legImg' src={leftLegImg} alt='leftleg' />\n      </div>\n    )\n  }\n}\n\nLeftLeg.propTypes = {\n  walkForward: PropTypes.bool,\n  walkBackward: PropTypes.bool\n}\n\nexport default LeftLeg","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport headImg from '../../assets/head.png'\nimport './head.css'\n\nclass Head extends Component {\n  render() {\n    const { dance } = this.props\n    return (\n      <div className={dance ? 'head, danceHead' : 'head'}>\n        <img src={headImg} alt='head' />\n      </div>\n    )\n  }\n}\n\nHead.propTypes = {\n  dance: PropTypes.bool,\n//   active: PropTypes.string\n}\n\nexport default Head","import React, { Component } from 'react'\nimport Body from './body/index.js'\nimport RightArm from './rightArm/index.js'\nimport LeftArm from './leftArm/index.js'\nimport RightLeg from './rightLeg/index.js'\nimport LeftLeg from './leftLeg/index.js'\nimport Head from './head/index.js'\nimport '../App.css'\n\nclass Main extends Component {\n    state = {\n      dance: false,\n      walkForward: false,\n      walkBackward: false\n    }\n    dance = () => this.state.dance ? this.setState({dance: false}) : this.setState({dance: true, walkBackward: false, walkForward: false})\n    walkForward = () => this.state.walkForward ? this.setState({walkForward: false}) : this.setState({walkForward: true, walkBackward: false, dance: false})\n    walkBackward = () => this.state.walkBackward ? this.setState({walkBackward: false}) : this.setState({walkBackward: true, walkForward: false, dance: false})\n    render() {\n      const { dance, walkBackward, walkForward } = this.state\n      return (\n        <div className=\"main\">\n          <div className={dance ? 'robot, dance' : walkForward ? 'robot, walkForward' : walkBackward ? 'robot, walkBackward' : 'robot'}>\n            <Head dance={dance} walkForward={walkForward} walkBackward={walkBackward} />\n            <Body dance={dance} walkForward={walkForward} walkBackward={walkBackward} />\n            <RightArm dance={dance} walkForward={walkForward} walkBackward={walkBackward} />\n            <LeftArm dance={dance} walkForward={walkForward} walkBackward={walkBackward} />\n            <RightLeg dance={dance} walkForward={walkForward} walkBackward={walkBackward} />\n            <LeftLeg dance={dance} walkForward={walkForward} walkBackward={walkBackward} />\n          </div>\n          <div className='buttons'>\n            <div className='btn' onClick={this.walkBackward}>Walk backward</div>\n            <div className='btn' onClick={this.walkForward}>Walk forward</div>\n            <div className='btn' onClick={this.dance}>Dance</div>\n          </div>\n        </div>\n      )\n    }\n}\n\nexport default Main","import React from 'react'\nimport './App.css'\nimport Main from './components/main.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
{"version":3,"sources":["assets/arm.png","assets/leg.png","assets/legOff.png","assets/55846__sergenious__robo.wav","assets/364334__mialena24__canto-robot-1.wav","assets/447999__audionauten__robot-affirmation-balanced.wav","assets/275561__deleted-user-4798915__robot-transmission.flac","assets/body.png","assets/bodyOff.png","assets/head.png","assets/headOff.png","assets/397253__screamstudio__robot.wav","assets/336879__shahruhaudio__robotic-transform-1.wav","components/body/index.js","components/rightArm/index.js","components/leftArm/index.js","components/rightLeg/index.js","components/leftLeg/index.js","components/head/index.js","components/main.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Body","robotOn","this","props","className","src","bodyImg","bodyOff","alt","Component","RightArm","dance","rightArmImg","LeftArm","leftArmImg","RightLeg","walkForward","walkBackward","rightLegImg","legOff","LeftLeg","leftLegImg","Head","headImg","headOffImg","Main","state","currentSound","robotMumble","handleOnOff","setState","clashClang","startupSound","robotSinging","defaultSound","robotWalking","onClick","url","playStatus","Sound","status","PLAYING","loop","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e78b1a1d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arm.0c2bfaa2.png\";","module.exports = __webpack_public_path__ + \"static/media/leg.3a8a3d1b.png\";","module.exports = __webpack_public_path__ + \"static/media/legOff.c6a78af8.png\";","module.exports = __webpack_public_path__ + \"static/media/55846__sergenious__robo.1906ef65.wav\";","module.exports = __webpack_public_path__ + \"static/media/364334__mialena24__canto-robot-1.8a31e5fa.wav\";","module.exports = __webpack_public_path__ + \"static/media/447999__audionauten__robot-affirmation-balanced.e611d942.wav\";","module.exports = __webpack_public_path__ + \"static/media/275561__deleted-user-4798915__robot-transmission.2ea44ff4.flac\";","module.exports = __webpack_public_path__ + \"static/media/body.aa4751ba.png\";","module.exports = __webpack_public_path__ + \"static/media/bodyOff.d57c33e2.png\";","module.exports = __webpack_public_path__ + \"static/media/head.937d0fcd.png\";","module.exports = __webpack_public_path__ + \"static/media/headOff.63e46ff8.png\";","module.exports = __webpack_public_path__ + \"static/media/397253__screamstudio__robot.f6df72ef.wav\";","module.exports = __webpack_public_path__ + \"static/media/336879__shahruhaudio__robotic-transform-1.5cd58b71.wav\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport bodyImg from '../../assets/body.png'\nimport bodyOff from '../../assets/bodyOff.png'\nimport './body.css'\n\nclass Body extends Component {\n  render() {\n    const { robotOn } = this.props\n    return (\n      <div className=\"body\">\n        <img src={robotOn ? bodyImg : bodyOff} alt='body' />\n      </div>\n    )\n  }\n}\n\nBody.propTypes = {\n  robotOn: PropTypes.bool,\n}\n\nexport default Body","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport rightArmImg from '../../assets/arm.png'\nimport './rightArm.css'\n\nclass RightArm extends Component {\n  render() {\n    const { dance } = this.props\n    return (\n      <div className={dance ? 'rightArm, danceRightArm' : 'rightArm'}>\n        <img src={rightArmImg} alt='rightArm' />\n      </div>\n    )\n  }\n}\n\nRightArm.propTypes = {\n  dance: PropTypes.bool,\n//   active: PropTypes.string\n}\n\nexport default RightArm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport leftArmImg from '../../assets/arm.png'\nimport './leftArm.css'\n\nclass LeftArm extends Component {\n  render() {\n    const { dance } = this.props\n    return (\n      <div className={dance ? 'leftArm, danceLeftArm': 'leftArm'}>\n        <img src={leftArmImg} alt='leftArm' />\n      </div>\n    )\n  }\n}\n\nLeftArm.propTypes = {\n  dance: PropTypes.bool,\n//   active: PropTypes.string\n}\n\nexport default LeftArm","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport rightLegImg from '../../assets/leg.png'\nimport legOff from '../../assets/legOff.png'\nimport './rightLeg.css'\n\nclass RightLeg extends Component {\n  render() {\n    const { dance, walkForward, walkBackward, robotOn } = this.props\n    return (\n      <div className={dance ? 'rightLeg, danceRightLeg' : walkForward || walkBackward ? 'rightLeg, walkRightLeg' : 'rightLeg'}>\n        <img className='legImg' src={robotOn ? rightLegImg : legOff} alt='rightleg' />\n      </div>\n    )\n  }\n}\n\nRightLeg.propTypes = {\n  dance: PropTypes.bool,\n  walkForward: PropTypes.bool,\n  walkBackward: PropTypes.bool,\n  robotOn: PropTypes.bool\n}\n\nexport default RightLeg","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport leftLegImg from '../../assets/leg.png'\nimport legOff from '../../assets/legOff.png'\nimport './leftLeg.css'\n\nclass LeftLeg extends Component {\n  render() {\n    const { walkForward, walkBackward, robotOn } = this.props\n    return (\n      <div className={walkForward || walkBackward ? 'leftLeg, walkLeftLeg' : 'leftLeg'}>\n        <img className='legImg' src={robotOn ? leftLegImg : legOff} alt='leftleg' />\n      </div>\n    )\n  }\n}\n\nLeftLeg.propTypes = {\n  walkForward: PropTypes.bool,\n  walkBackward: PropTypes.bool,\n  robotOn: PropTypes.bool\n}\n\nexport default LeftLeg","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport headImg from '../../assets/head.png'\nimport headOffImg from '../../assets/headOff.png'\nimport './head.css'\n\nclass Head extends Component {\n  render() {\n    const { dance, robotOn } = this.props\n    return (\n      <div className={dance ? 'head, danceHead' : 'head'}>\n        <img src={robotOn ? headImg : headOffImg} alt='head' />\n      </div>\n    )\n  }\n}\n\nHead.propTypes = {\n  dance: PropTypes.bool,\n  robotOn: PropTypes.bool\n}\n\nexport default Head","import React, { Component } from 'react'\nimport Body from './body/index.js'\nimport RightArm from './rightArm/index.js'\nimport LeftArm from './leftArm/index.js'\nimport RightLeg from './rightLeg/index.js'\nimport LeftLeg from './leftLeg/index.js'\nimport Head from './head/index.js'\nimport '../App.css'\nimport Sound from 'react-sound'\nimport robotSinging from '../assets/364334__mialena24__canto-robot-1.wav'\nimport robotWalking from '../assets/55846__sergenious__robo.wav'\nimport defaultSound from '../assets/447999__audionauten__robot-affirmation-balanced.wav'\n// import robotThinking from '../assets/390531__freedomfightervictor__calculating.wav'\nimport startupSound from '../assets/397253__screamstudio__robot.wav'\nimport clashClang from '../assets/336879__shahruhaudio__robotic-transform-1.wav'\nimport robotMumble from '../assets/275561__deleted-user-4798915__robot-transmission.flac'\n\n\nclass Main extends Component {\n    state = {\n      dance: false,\n      walkForward: false,\n      walkBackward: false,\n      currentSound: robotMumble,\n      robotOn: true\n    }\n    handleOnOff = () => this.state.robotOn\n      ? this.setState({robotOn: false, currentSound: clashClang, dance: false, walkBackward: false, walkForward: false})\n      : this.setState({robotOn: true, currentSound: startupSound})\n    dance = () => this.state.robotOn ? this.state.dance \n      ? this.setState({dance: false, currentSound: robotMumble}) \n      : this.setState({dance: true, walkBackward: false, walkForward: false, currentSound: robotSinging}) : null\n    walkForward = () => this.state.robotOn ? this.state.walkForward \n      ? this.setState({walkForward: false, currentSound: defaultSound}) \n      : this.setState({walkForward: true, walkBackward: false, dance: false, currentSound: robotWalking}) : null\n    walkBackward = () => this.state.robotOn ? this.state.walkBackward \n      ? this.setState({walkBackward: false, currentSound: defaultSound})\n      : this.setState({walkBackward: true, walkForward: false, dance: false, currentSound: robotWalking}) : null\n    render() {\n      const { dance, walkBackward, walkForward, currentSound, robotOn } = this.state\n      return (\n        <div className=\"main\">\n          <div className={dance ? 'robot, dance' : walkForward ? 'robot, walkForward' : walkBackward ? 'robot, walkBackward' : 'robot'}>\n            <Head dance={dance} walkForward={walkForward} walkBackward={walkBackward} robotOn={robotOn} />\n            <Body dance={dance} walkForward={walkForward} walkBackward={walkBackward} robotOn={robotOn} />\n            <RightArm dance={dance} walkForward={walkForward} walkBackward={walkBackward} robotOn={robotOn} />\n            <LeftArm dance={dance} walkForward={walkForward} walkBackward={walkBackward} robotOn={robotOn} />\n            <RightLeg dance={dance} walkForward={walkForward} walkBackward={walkBackward} robotOn={robotOn} />\n            <LeftLeg dance={dance} walkForward={walkForward} walkBackward={walkBackward} robotOn={robotOn} />\n          </div>\n          <div className='buttons'>\n            <div className={walkBackward ? 'btnActive' : 'btn'} onClick={this.walkBackward}>Walk backward</div>\n            <div className={walkForward ? 'btnActive' : 'btn'} onClick={this.walkForward}>Walk forward</div>\n            <div className={dance ? 'btnActive' : 'btn'} onClick={this.dance}>Dance</div>\n            <div className={robotOn ? 'btnOn' : 'btnOff'} onClick={this.handleOnOff}>Power</div>\n          </div>\n          {currentSound ?\n            <Sound\n              url={currentSound}\n              playStatus={Sound.status.PLAYING}\n              loop={currentSound === robotWalking || currentSound === robotSinging}\n            //   playFromPosition={300 /* in milliseconds */}\n            //   onLoading={this.handleSongLoading}\n            //   onPlaying={this.handleSongPlaying}\n            //   onFinishedPlaying={this.handleSongFinishedPlaying}\n            /> : null}\n        </div>\n      )\n    }\n}\n\nexport default Main","import React from 'react'\nimport './App.css'\nimport Main from './components/main.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}